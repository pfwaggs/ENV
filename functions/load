
#TAG:use

# vim: ai si sw=4 sts=4 et ft=sh 

_loaddir () {
    echo checking $1
    for n in $(grep -l '#TAG:use' $1/*); do
        [[ -v VERBOSE ]] && echo $n || echo -n .
        . $n
    done
    echo finished $1
}

_dircheck () {
    for x in ${ENV//:/ }; do
        [[ -f $x/$1 ]] || continue
        echo $x/$1
    done
}

_envpurge () {
    complete -r
    unalias -a
    unset -f $(compgen -A function)
    unset ${!LC_*}
    echo ${ENV//:/ }
}

load () {
    [[ $# -gt 0 ]] || set -- _envpurge
    for x in $*; do
        str=$(file -b $x)
        case ${str%% *} in
            cannot)
                echo checking dirs to see if there
                rtn=$(_dircheck $x)
                [[ -z $rtn ]] || load $rtn
                ;;
            directory)
                _loaddir $x
                ;;
            ASCII)
                . $x
                ;;
        esac
    done
}

#load () {
#    declare path file dir n ans
#    case $# in
#	0)
#	    echo reloading all
#	    read -p 'are you sure? ' ans
#	    [[ ! $ans =~ ^[yY] ]] && echo stopping now && return 1
#
#	    unalias -a
#	    unset -f $(compgen -A function)
#	    complete -r
#
#	    for dir in ${ENV//:/ }; do
#		pushd $dir >/dev/null
#		for n in $(ls -I#*); do
#		    [[ $VERBOSE ]] && echo $PWD/$n || echo -n .
#		    . ./$n
#		done
#		echo finished $PWD
#		popd >/dev/null
#	    done
#	    ;;
#	*)
#	    for file in "$@"; do
#		if [[ -s $file ]]; then
#		    source "$file"
#		    echo sourced $file
#		elif [[ -d $file ]]; then
#		    pushd $file >/dev/null
#		    for n in $(ls -I#*); do
#			[[ $VERBOSE ]] && echo $PWD/$n || echo -n .
#			. ./$n
#		    done
#		    echo finished $PWD
#		    popd >/dev/null
#		else
#		    for dir in ${ENV//:/ }; do
#			[[  -s "$dir/$file" ]] && path=$dir/$file || break
#			read -p "load $path ?" ans
#			[[ $ans =~ ^[yY] ]] && source "$path" || echo skipping $path
#		    done
#		fi
#	    done
#	    ;;
#    esac
#}

