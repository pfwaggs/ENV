#split# 6c87f13fe06e809f8bc1f9cd8eef4111 tools/check
#help: check : used to check if anything has changed in a src dir
#help: usage : check name.rc
#help: :
function check () {
    declare x file=check_${1%.rc}.$$
    for x in ${1%.rc}/*; do
        echo '#split# '$(md5sum $x)
        cat $x
    done | expand > $file
    diff -q $file $1 && rm $file
}
#split# 0f10aeeee32fe4043f2910606834b5bb tools/cksumit
#help: cksumit : provides a line checksum for given files.
#help: usage : cksumit file [file ...]
function cksumit () {
    for x in $@; do
        echo ${x#$PRUNE/}
        while read -r; do
            ck=$(echo $REPLY | tr -d '[[:space:]]' | sum)
            echo ${ck%% *} "$REPLY"
        done < $x
        echo ''
    done
}
#split# c8383ee121279908d52d85071de62276 tools/fjoin
#help: fjoin : takes a dir of functions and makes a function file
#help: usage : fjoin dir
#help: : dir is the directory you want to turn into a dir.rc file
function fjoin () {
    declare dir=${1%/}
    [[ -d $dir ]] || { echo  $dir does not exist, skipping; continue; }
    declare file=$dir.rc
    mv $file $file.bk
    for x in $dir/*; do
        echo '#split# '$(md5sum $x)
        cat $x
    done | expand > $file
    rm -I $dir/* || return
    rmdir $dir || return
    rm -i $file.bk || return
}
#split# 470dc54dd3f950239b511b53be942fa5 tools/fsplit
#help: fsplit : splits a file of functions into a dir of separate functions
#help: usage : fsplit file
function fsplit () {
    declare x
    [[ $1 =~ .rc$ ]] || { echo skipping $1: bad input name; return; }
    [[ -s $1 ]] || { echo "can not find <$1>, skipping"; return; }
    declare -x dir=${1%.rc}
    [[ -d $dir ]] && { echo $dir already exists; return; }
    mkdir $dir &>/dev/null || { echo mkdir $dir failed; return; }
    pushd $dir &>/dev/null || { echo pushd failed; return; }
    csplit -s -z --prefix=AA ../$1 /^#split#/ {*}
    sed -i -s '/^#split#/d' *
    find -type f -empty -exec rm {} \;
    for x in *; do
        new=$(awk '/^function / {print $2;exit}' $x)
        [[ -n $new ]] || continue
        expand $x > $new
        rm $x
    done
    popd &>/dev/null
}
#split# 4a8f21bb2d01089b116a51da06325635 tools/xtfn
#help: xtfn : function to extract a function from an rc file
#help: usage : xtfn function
function xtfn () {
    declare x list=$(grep -l "^function $1 " $MAINDIR/*.rc)
    [[ -f $MAINDIR/$1 ]] && list+=" $MAINDIR/$1"
    for x in ${list[@]}; do
        echo $1 found in $x ... >&2
        sed -nr "/^#help: $1 :/{:1;p;n;/^#split#/!b1;q}" $x
        echo ''
    done
}
