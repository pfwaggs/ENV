
#help: gigify : converts numbers to a different unit
#help: usage : gigify text
function gigify ()
{
    declare u=BKMGT b=1024 v=$(echo ${@//[^0-9.+-]}) s=${v//[0-9.]}
    v=${v//[+-]}
    [[ $@ =~ [bB] ]] || b=1000
    declare m=$(dc -e "$v Z 1 - 3 / p")
    v=$(dc -e "4 k $v $f $m ^ / p")
    printf "%s%7.3f%s\n" "${s: }" $v ${u:$m:1}
}

#help: psfu : checks the process table for specified user
#help: usage : psfu sid
function psfu ()
{
    ps -f -u ${1:-$(id -un)}
}

#help: tinfo : generates some metatdata for a path versions of given filename
#help: usage : tinfo file
function tinfo () {
    declare x y
    for x; do
	for y in $(type -a -p $x); do	
	    ls -l $y
	    md5sum $y
	    echo -ne $'\n'
	    file -k $y
	    echo -e $'\n\n\n'
	done
    done
}

#help: tname : modifies titlename
#help: usage : tname (str)
function tname ()
{
    printf "\033k%s\033\\" ${1:-bash}
}

#help: typer : used to examine files based on type
#help: usage : typer file
function typer ()
{
    declare mtype x
    for mtype in $(type -at $1); do
        case $mtype in
            function)
                read name num loc < <(ffunc $1)
                xmn a $loc
                ;;
            file)
                for x in $(type -aP $1); do
                    xmn t "$n"
                done
                ;;
            alias)
                alias $1
                ;;
            *)
                continue;
                ;;
        esac
    done
}

#help: wup : function to wake up machines on the network
#help: usage : wup machine_name
function wup ()
{
    declare cmd=$(type -p etherwake wol)
    declare ip=$(dig +search +short -t txt $1)
    eval $cmd $ip
}

#help: xmn : used to produce a detailed listing
#help:     : of source code with some extra stuff
function xmn ()
{
    declare opt infile tmp n arg file OPTIND=1 keep=0
    declare -a opts flist
    while getopts 'acf:KmMptw' arg; do
	case $arg in
	    a)
		opts+=(m c w)
		;;
	    [cKmMptw])
		opts+=($arg)
		;;
	    f)
		file=$OPTARG
		;;
	esac
    done
    opts=($(_FixList -u ${opts[@]}))
    shift $((OPTIND-1))
    [[ -n $file ]] && flist=($(cat $file | xargs)) || :
    for infile in ${flist[@]} $@; do
	echo -e "\n#### ${infile##*/}"
	tmp=/tmp/${infile##*/}
	expand $infile | sed -r 's/ +$//' > $tmp
	for opt in ${opts[@]}; do
	    case $opt in
		p)
		    cat -n $tmp
		    ;;
		c)
		    [[ -f $tmp ]] || continue
		    while read -r n; do
			printf "%3d %s\n" ${#n} $(echo -E "$n" | sum | cut -c1-5)
		    done < $tmp | paste -d ' ' - <(sed 's/^/^/;s/$/$/' $tmp) | cat -n
		    ;;
		w)
		    [[ -f $tmp ]] || continue
		    wc $tmp
		    ;;
		m)
		    md5sum $infile
		    ;;
		M)
		    [[ -f $tmp ]] || continue
		    md5sum $tmp
		    ;;
		t)
		    ls -l $infile
		    file $infile
		    stat $infile
		    ;;
		K)
		    ((keep=1-keep))
		    ;;
	    esac
	done
	((keep)) || rm $tmp >/dev/null
	echo ''
    done
}

#help: xtfn : function to extract a function for an aggregated list
#help: usage : xtfn function
function xtfn () {
    declare flist=$(echo $MAINDIR/functions $MAINDIR/extra_functions)
    sed -nr "/^function $1 /{:1;p;n;/^}/!b1;p;q}" $flist
}

