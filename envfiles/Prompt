
function setPrompt () {
    declare x key
    declare flip color text
    declare colors=${!_ColorNum[*]}
    declare colorPat=${colors// /|}
    declare -A promptMap
    for x in ${!_PromptShow[*]}; do promptMap[${x:0:1}]=$x; done

    if [[ $1 = help ]]; then
	cat <<-end
	args are: key[=color][=text]
	keys are: num xtra tag user host spath lpath prompt
	a bare key toggles that item
	end
	return
    fi
    for x in "$@"; do
	key=${x%%=*}
	while read x; do
	    case $x in 
		[01])
		    flip=$x
		    ;;
		@($colorPat))
		    color=$x
		    ;;
		*)
		    text=$x
		    ;;
	    esac
	done < <(echo -n ${1#*=} | perl -a -F/=/ -E 'say for @F')
	[[ -n $text ]] && [[ $key =~ tag|xtra ]] && _PromptCfg[$key]=$text
	[[ -n $color ]] && _PromptColor[$key]=$color
	[[ -n $flip ]] && _PromptShow[$key]=$flip 
	unset text color flip key
    done
    _PromptShow[host]=1
    _PromptShow[prompt]=1
    PS1=
    for x in num xtra tag user host spath lpath prompt; do
        [[ ${_PromptShow[$x]} = 0 ]] && continue
	[[ ${_PromptCfg[$x]} = '' ]] && continue
        color=${_PromptColor[$x]}
        num=${_ColorNum[$color]}
        PS1+=$'\[\e['${num}m$'\]'${_PromptCfg[$x]}' '
    done
    PS1+=$'\[\e[m\]'
}

function  tag () { setPrompt tag="$*"; }
function xtra () { setPrompt xtra="$*"; }
alias stp='setPrompt '
