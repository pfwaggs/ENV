
# some basic list operations
# -s sort
# -e exists
# -r reverse
# -l resolve links
# -c clear items
# -u unique items
# -S output a single string
function _FixList ()
{
    declare p opt
    declare -a nlist list opts
    for p in "$@"; do
        [[ $p =~ ^-.* ]] && opts+=($p) || list+=("$p")
    done
    if [[ ${#list[@]} -eq 0 ]]; then
        while read p; do
            list+=("$p")
        done < <(cat -- -)
    fi
    for opt in ${opts[@]}; do
        nlist=()
        case $opt in
            -s)
		while read -r p; do
                    nlist+=("$p")
                done < <(printf '%s\n' "${list[@]}" | sort)
                ;;
            -e)
                for p in "${list[@]}"; do
                    [[ -e "$p" ]] && nlist+=("$p") || continue
                done
                ;;
            -r)
		while read -r p; do
                    nlist+=("$p")
                done < <(printf '%s\n' "${list[@]}" | tac)
                ;;
            -l)
                for p in "${list[@]}"; do
                    [[ -L "$p" ]] && p=$(readlink -e "$p") || :
                    nlist+=("$p")
                done
                ;;
            -c)
		for p in "${list[@]:1}"; do
		    [[ $p =~ ${list[0]}.* ]] || nlist+=("$p")
                done
                ;;
            -u)
                for p in "${list[@]}"; do
                    [[ ${nlist[@]} =~ :$p ]] || nlist+=(":$p")
                done
                nlist=("${nlist[@]/#:}")
                ;;
            -S|*)
                declare IFS=${SEP:-:}$IFS
                echo "${list[*]}"
		return
                ;;
        esac
        list=("${nlist[@]}")
    done
    printf '%s\n' "${list[@]}"
}

# clear the environment of crap
function envpurge ()
{
    complete -r
    unalias -a
    unset -f $(compgen -A function) &>/dev/null
}
declare -fr envpurge

# produces a list of paths for source-ing input paths should specify a
# directory or filename of a list of files in the parent directory to
# load relative to it's parent

function _flistXpnd ()
{
    declare x
    for x in $@; do
	[[ -f $x/FLIST ]] || continue
	grep -o -P '^\w+' $x/FLIST | sed "s|^|$x/|"
    done
}
declare -frx _flistXpnd

function _flistFind ()
{
    declare x dir
    for x in $@; do
	for dir in ${FLISTDIRS//:/ }; do
	    [[ -f $$dir/$x ]] && echo $dir/$x || continue
	done
    done
}
declare -frx _flistFind

# sources a provided list of files
function _genFuncPaths ()
{
    declare x
    declare -a mainList recheck
    for x in $@; do
	[[ $x =~ / ]] && mainList+=($x) || recheck+=($x)
    done
    if [[ ${#recheck[@]} -gt 0 ]]; then
	while read x; do
	    mainList+=($x)
	done < <($(_flistFind ${recheck[@]}))
    fi
    for x in ${mainList[@]}; do
	echo $x
    done
}
declare -frx _genFuncPaths

function load () {
    [[ $# -gt 0 ]] || envpurge
    for x in ${@:-$(_flistXpnd)}; do
	. $x
	[[ -f ~/.quiet ]] && echo -n . || echo $x
    done
    echo ' done'
}
declare -frx load

