function stk () {
    declare z=~/$$ save=~/.dirstk.txt
    echo $1 >&2
    case ${1:0:1} in
	'') pushd ;;
	l) [[ -f ${2:-$save} ]] && cat ${2:-$save} || : ;;
	s) dirs -l -p | tee ${2:-$save};;
	k) [[ $1 = kk ]] || return 0
	    pushd .. >/dev/null
	    rm -r ~1
	    popd +1 >/dev/null
	    ;;
	r) tac ${2:-$save} > $z
	    exec 4<$z
	    while read -u 4 f; do
		pushd -n $f
	    done >/dev/null
	    exec 4<&-
	    rm $z
	    [[ -d ~1 ]] && popd >/dev/null
	    ;;
	c) if [[ $# -gt 0 ]]; then
		for x in $(echo $@ | xargs -n 1 | sort -rn | xargs); do
		    popd +$x
		done >/dev/null
	    else
		dirs -c
	    fi
	    ;;
	\~) eval "declare tmp=$1"
	    popd +${1:1} >/dev/null
	    pushd $tmp >/dev/null
	    ;;
	[0-9]) pushd +$1 >/dev/null
	    ;;
	*) if [[ ! -d $1 ]]; then
		read -p 'create dir?: ' -e -i "$1"
		mkdir "$REPLY"
	    fi
	    pushd "$1" >/dev/null
	    ;;
    esac
    dirs -l -v
}

complete -o filenames -C '_ParseArg' stk
